controller:
  additionalPlugins:
    - github:1.37.1
    - junit:1217.v4297208a_a_b_ce
    - aws-credentials:191.vcb_f183ce58b_9
    - role-strategy:665.v4d4f871dc768
  existingSecret: github-credentials
    
  JCasC:
    configScripts:
      jenkins-casc-configs: |
        credentials:
          system:
            domainCredentials:
            - credentials:
              - usernamePassword:
                  description: "github access username password"
                  id: "github_username_pass"
                  password: ${github-password}
                  scope: GLOBAL
                  username: ${github-username}
      # role-strategy: |
      #   jenkins:
      #     authorizationStrategy:
      #       roleBased:
      #         roles:
      #           global:
      #             - name: "admin"
      #               description: "Jenkins administrators"
      #               permissions:
      #                 - "Overall/Administer"
                      
      # awssecrets: |
      #   unclassified:
      #     awsCredentialsProvider:
      #       endpointConfiguration:
      #         serviceEndpoint: https://secretsmanager.eu-west-1.amazonaws.com
      #         signingRegion: eu-west-2

  jenkinsUrl: jenkins.jumia-challenge.com
  serviceType: NodePort
  ingress:
    enabled: true
    # Override for the default paths that map requests to the backend
    paths: []
    # - backend:
    #     serviceName: ssl-redirect
    #     servicePort: use-annotation
    # - backend:
    #     serviceName: >-
    #       {{ template "jenkins.fullname" . }}
    #     # Don't use string here, use only integer value!
    #     servicePort: 8080
    # For Kubernetes v1.14+, use 'networking.k8s.io/v1beta1'
    # For Kubernetes v1.19+, use 'networking.k8s.io/v1'
    apiVersion: "networking.k8s.io/v1"
    labels: {}
    annotations:
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      cert-manager.io/cluster-issuer: letsencrypt-test
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
    ingressClassName: alb
    # Set this path to jenkinsUriPrefix above or use annotations to rewrite path
    # path: "/jenkins"
    # configures the hostname e.g. jenkins.example.com
    hostName:
    tls:
    - secretName: jenkins-controller-tls
      hosts:
        - jenkins.jumia-challenge.com

  prometheus:
    enabled: false

agent:
  yamlTemplate: |-
    apiVersion: v1
    kind: Pod
    spec:
      nodeSelector:
        app: "jenkins"
      tolerations:
        - key: "application"
          operator: "Equal"
          value: "jenkins"
          effect: "PreferNoSchedule"